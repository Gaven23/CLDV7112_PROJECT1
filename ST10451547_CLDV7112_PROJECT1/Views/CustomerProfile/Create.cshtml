@model ST10451547_CLDV7112_PROJECT1.Data.Entities.CustomerProfile;
@{
    ViewData["Title"] = "Create";
    var errorMessage = TempData[ST10451547_CLDV7112_PROJECT1.Controllers.CustomerProfileController.ErrorMessageKey] as string;
    var successMessage = TempData[ST10451547_CLDV7112_PROJECT1.Controllers.CustomerProfileController.SuccessMessageKey] as string;
}

<div class="container">
    <div class="form-wrapper">
        <h1>Create Customer Profile</h1>
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CustomerName">Customer Name</label>
                <input class="form-control" type="text" asp-for="CustomerName" placeholder="Enter Customer Name">
            </div>

            <div class="form-group">
                <label asp-for="CustomerAddress">Customer Address</label>
                <input class="form-control" type="text" asp-for="CustomerAddress" placeholder="Enter Customer Address">
            </div>

            <div class="form-group">
                <label asp-for="CustomerCity">Customer City</label>
                <input class="form-control" type="text" asp-for="CustomerCity" placeholder="Enter Customer City">
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber">Phone Number</label>
                <input class="form-control" type="text" asp-for="PhoneNumber" placeholder="Enter Phone Number">
            </div>

            <div class="form-group file-upload">
                <label for="CustomerPicture">Upload Picture:</label>
                <input type="file" id="CustomerPicture" asp-for="Upload" name="Upload" />
            </div>

            <div class="form-actions">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger  mb-2" role="alert">
        @errorMessage
    </div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mb-2" role="alert">
        @successMessage
    </div>
}

<style>
    .container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
    }

    .form-wrapper {
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    h1 {
        font-size: 24px;
        margin-bottom: 20px;
        color: #333;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
            color: #555;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        box-sizing: border-box;
    }

        .form-control:focus {
            border-color: #007bff;
            outline: none;
        }

    .form-control-file {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 10px;
    }

    .form-actions {
        margin-top: 20px;
        display: flex;
        justify-content: space-between;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        color: #fff;
        cursor: pointer;
        text-align: center;
        font-size: 16px;
    }

    .btn-primary {
        background-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .text-danger {
        color: #dc3545;
        margin-bottom: 15px;
    }
</style>
